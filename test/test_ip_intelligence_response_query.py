# coding: utf-8

"""
    Whisper API Platform

    Whisper provides comprehensive intelligence and monitoring capabilities for domains, IPs, and web infrastructure. Access powerful APIs for WHOIS data, DNS analysis, screenshot capture, network intelligence, and more - all through a unified, authenticated interface.  **Key Features:** • Domain intelligence and subdomain discovery • IP geolocation and network analysis • Real-time and historical WHOIS data • Automated website screenshot capture • Network relationship mapping • BGP routing and security intelligence • Infrastructure monitoring and health checks  **Authentication:** All endpoints require Bearer token authentication. Contact support for API access.

    The version of the OpenAPI document: 1.0.0
    Contact: api-support@whisper.security
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_frontgraph_sdk.models.ip_intelligence_response_query import IpIntelligenceResponseQuery

class TestIpIntelligenceResponseQuery(unittest.TestCase):
    """IpIntelligenceResponseQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IpIntelligenceResponseQuery:
        """Test IpIntelligenceResponseQuery
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IpIntelligenceResponseQuery`
        """
        model = IpIntelligenceResponseQuery()
        if include_optional:
            return IpIntelligenceResponseQuery(
                ip = '8.8.8.8',
                timestamp = '2025-09-13T10:30Z',
                response_time_ms = 3500
            )
        else:
            return IpIntelligenceResponseQuery(
        )
        """

    def testIpIntelligenceResponseQuery(self):
        """Test IpIntelligenceResponseQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
